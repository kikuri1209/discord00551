import discord
from discord.ext import commands, tasks
import asyncio
from datetime import datetime, timedelta
import pytz
import os
from myserver import server_on


CHANNEL_ID = 1204467537618935839
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix='!', intents=intents)
boss_timers = {}
notifications_enabled = True  # ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô

# ‡πÑ‡∏ó‡∏¢‡πÇ‡∏ã‡∏ô‡πÄ‡∏ß‡∏•‡∏≤
tz = pytz.timezone('Asia/Bangkok')

# ====================== ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™ ======================
@tasks.loop(seconds=1)
async def check_bosses():
    now = datetime.now(tz)
    channel = bot.get_channel(CHANNEL_ID)
    if channel is None:
        return
    for name, info in list(boss_timers.items()):
        warn_time = info['next_time'] - timedelta(minutes=2)
        if notifications_enabled and not info['warned'] and now >= warn_time:
            await channel.send(f"‚è∞ ‡πÉ‡∏Å‡∏•‡πâ‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤ **{name}** ‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞!", file=discord.File(info['image_path']))
            info['warned'] = True
        if now >= info['next_time']:
            if notifications_enabled:
                await channel.send(f"üõ°Ô∏è ‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤ **{name}** ‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞!", file=discord.File(info['image_path']))
            info['next_time'] += timedelta(hours=info['interval_hours'], minutes=info['interval_minutes'])
            info['warned'] = False

# ====================== !‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á / !‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á ======================
@bot.command(name='‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á')
async def enable_notifications(ctx):
    global notifications_enabled
    notifications_enabled = True
    await ctx.send("üîä ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")

@bot.command(name='‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á')
async def disable_notifications(ctx):
    global notifications_enabled
    notifications_enabled = False
    await ctx.send("üîá ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß! (‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ö‡∏≠‡∏™‡∏≠‡∏¢‡∏π‡πà)")

# ====================== ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Channel ======================
@bot.command(name='CHID')
async def change_channel(ctx, new_channel_id: int):
    global CHANNEL_ID
    try:
        new_channel = bot.get_channel(new_channel_id)
        if new_channel is None:
            await ctx.send("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ID ‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
            return
        CHANNEL_ID = new_channel_id
        await ctx.send(f"‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Channel ID ‡πÄ‡∏õ‡πá‡∏ô {CHANNEL_ID} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

# ====================== ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏≠‡∏™‡πÅ‡∏ö‡∏ö‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö ======================
@bot.command(name='‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏≠‡∏™')
async def add_boss(ctx):
    def check(m):
        return m.author == ctx.author and m.channel == ctx.channel

    await ctx.send("üìù ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏™:")
    try:
        name_msg = await bot.wait_for('message', check=check, timeout=60)
        name = name_msg.content.strip()

        await ctx.send("‚è∞ ‡πÉ‡∏™‡πà‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏™‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î (‡πÄ‡∏ä‡πà‡∏ô 16):")
        hour_msg = await bot.wait_for('message', check=check, timeout=60)
        hour = int(hour_msg.content.strip())

        await ctx.send("üïß ‡πÉ‡∏™‡πà‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏™‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î (‡πÄ‡∏ä‡πà‡∏ô 30):")
        min_msg = await bot.wait_for('message', check=check, timeout=60)
        minute = int(min_msg.content.strip())

        await ctx.send("üîÅ ‡∏ö‡∏≠‡∏™‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏ã‡πâ‡∏≥‡∏ó‡∏∏‡∏Å‡πÜ‡∏Å‡∏µ‡πà‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á:")
        interval_h_msg = await bot.wait_for('message', check=check, timeout=60)
        interval_hours = int(interval_h_msg.content.strip())

        await ctx.send("‚ûï ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏≤‡∏ó‡∏µ‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (‡πÉ‡∏™‡πà‡πÄ‡∏•‡∏Ç 0 ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£):")
        interval_m_msg = await bot.wait_for('message', check=check, timeout=60)
        interval_minutes = int(interval_m_msg.content.strip())

        await ctx.send("üñºÔ∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏ö‡∏≠‡∏™ (‡πÅ‡∏ô‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û):")
        image_msg = await bot.wait_for('message', check=check, timeout=60)
        image = image_msg.attachments[0]

        os.makedirs("./boss_images", exist_ok=True)
        image_path = f"./boss_images/{name}.png"
        await image.save(image_path)

        now = datetime.now(tz)
        next_time = tz.localize(datetime(now.year, now.month, now.day, hour, minute))
        if next_time < now:
            next_time += timedelta(days=1)

        boss_timers[name] = {
            'next_time': next_time,
            'interval_hours': interval_hours,
            'interval_minutes': interval_minutes,
            'warned': False,
            'image_path': image_path
        }

        await ctx.send(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏≠‡∏™ **{name}** ‡πÄ‡∏ß‡∏•‡∏≤ {hour:02d}:{minute:02d} ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏∏‡∏Å {interval_hours}‡∏ä‡∏°. {interval_minutes}‡∏ô‡∏≤‡∏ó‡∏µ")
    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

# ====================== ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏≠‡∏™ ======================
@bot.command(name='‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏≠‡∏™')
async def edit_boss(ctx, *, name):
    if name not in boss_timers:
        await ctx.send("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏≠‡∏™‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏µ‡πâ!")
        return

    def check(m):
        return m.author == ctx.author and m.channel == ctx.channel

    await ctx.send(f"‚úèÔ∏è ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏™ **{name}** ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏∞‡πÑ‡∏£? (‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå - ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô)")
    new_name_msg = await bot.wait_for('message', check=check, timeout=60)
    new_name = new_name_msg.content.strip()
    if new_name == "-":
        new_name = name

    await ctx.send("‚è∞ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏™‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î (0-23) ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå - ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô:")
    hour_msg = await bot.wait_for('message', check=check, timeout=60)
    hour_input = hour_msg.content.strip()

    await ctx.send("üïß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏™‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î (0-59) ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå - ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô:")
    min_msg = await bot.wait_for('message', check=check, timeout=60)
    min_input = min_msg.content.strip()

    await ctx.send("üîÅ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏™‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏ã‡πâ‡∏≥ ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå - ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô:")
    interval_h_msg = await bot.wait_for('message', check=check, timeout=60)
    interval_h_input = interval_h_msg.content.strip()

    await ctx.send("‚ûï ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô *‡∏ô‡∏≤‡∏ó‡∏µ* ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå - ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô:")
    interval_m_msg = await bot.wait_for('message', check=check, timeout=60)
    interval_m_input = interval_m_msg.content.strip()

    old_info = boss_timers[name]

    if hour_input != "-" and min_input != "-":
        hour = int(hour_input)
        minute = int(min_input)
        now = datetime.now(tz)
        next_time = tz.localize(datetime(now.year, now.month, now.day, hour, minute))
        if next_time < now:
            next_time += timedelta(days=1)
    else:
        next_time = old_info['next_time']

    interval_hours = int(interval_h_input) if interval_h_input != "-" else old_info['interval_hours']
    interval_minutes = int(interval_m_input) if interval_m_input != "-" else old_info['interval_minutes']

    if new_name != name:
        old_path = old_info['image_path']
        new_path = f"./boss_images/{new_name}.png"
        os.rename(old_path, new_path)
    else:
        new_path = old_info['image_path']

    boss_timers.pop(name)
    boss_timers[new_name] = {
        'next_time': next_time,
        'interval_hours': interval_hours,
        'interval_minutes': interval_minutes,
        'warned': False,
        'image_path': new_path
    }

    await ctx.send(f"‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏≠‡∏™ **{new_name}** ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")

# ====================== ‡∏•‡∏ö‡∏ö‡∏≠‡∏™ ======================
@bot.command(name='‡∏•‡∏ö‡∏ö‡∏≠‡∏™')
async def delete_boss(ctx, *, name):
    if name in boss_timers:
        del boss_timers[name]
        await ctx.send(f"üóëÔ∏è ‡∏•‡∏ö‡∏ö‡∏≠‡∏™ **{name}** ‡πÅ‡∏•‡πâ‡∏ß")
    else:
        await ctx.send("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏≠‡∏™‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏µ‡πâ!")

# ====================== ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ö‡∏≠‡∏™‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ======================
@bot.command(name='‡πÄ‡∏ä‡πá‡∏Ñ‡∏ö‡∏≠‡∏™')
async def check_boss(ctx):
    if not boss_timers:
        await ctx.send("üì≠ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏≠‡∏™‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ‡πÄ‡∏•‡∏¢")
        return

    msg = "üìã ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏™‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ:\n"
    for name, info in boss_timers.items():
        time_str = info['next_time'].strftime('%H:%M')
        msg += f"- {name} : ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ {time_str} / ‡∏ó‡∏∏‡∏Å {info['interval_hours']}‡∏ä‡∏°. {info['interval_minutes']}‡∏ô‡∏≤‡∏ó‡∏µ\n"
    await ctx.send(msg)

# ====================== ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ======================
@bot.command(name='‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á')
async def check_commands(ctx):
    help_text = (
        "üìå **‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó Boss Timer**\n\n"
        "üîπ `!‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏≠‡∏™` - ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏≠‡∏™‡πÅ‡∏ö‡∏ö‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö\n"
        "üîπ `!‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏≠‡∏™ <‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏™>` - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏™‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ\n"
        "üîπ `!‡∏•‡∏ö‡∏ö‡∏≠‡∏™ <‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏™>` - ‡∏•‡∏ö‡∏ö‡∏≠‡∏™‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ\n"
        "üîπ `!‡πÄ‡∏ä‡πá‡∏Ñ‡∏ö‡∏≠‡∏™` - ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏™‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ß‡πâ\n"
        "üîπ `!‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á` / `!‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á` - ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô\n"
        "üîπ `!CHID <Channel ID>` - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Channel ID ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ\n"
    )
    await ctx.send(help_text)

# ====================== ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó ======================
@bot.event
async def on_ready():
    print(f'‚úÖ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠: {bot.user}')
    check_bosses.start()

server_on

bot.run(os.getenv('TOKEN'))
